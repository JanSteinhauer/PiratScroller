[gd_resource type="ShaderMaterial" load_steps=12 format=2]

[ext_resource path="res://Assets/models/Island Boss.png" type="Texture" id=1]
[ext_resource path="res://Assets/models/Island Boss glow.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Input:4
	float n_out4p0 = TIME;

// ScalarFunc:5
	float n_out5p0 = sin(n_out4p0);

// ScalarClamp:7
	float n_in7p1 = 0.00000;
	float n_in7p2 = 1.00000;
	float n_out7p0 = clamp(n_out5p0, n_in7p1, n_in7p2);

// ScalarOp:8
	float n_in8p1 = 0.50000;
	float n_out8p0 = n_out7p0 * n_in8p1;

// ScalarOp:9
	float n_in9p1 = 0.50000;
	float n_out9p0 = n_out8p0 + n_in9p1;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ScalarOp:6
	float n_out6p0 = n_out9p0 * dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333));

// Output:0
	ALBEDO = n_out2p0;
	EMISSION = vec3(n_out6p0);

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -587.817, 199.229 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -200, 240 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -720, 640 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( -820, 540 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -680, 520 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( 120, 540 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -460, 540 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( -260, 460 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( -80, 520 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 3, 0, 6, 1, 6, 0, 0, 5, 5, 0, 7, 0, 2, 0, 0, 0, 7, 0, 8, 0, 8, 0, 9, 0, 9, 0, 6, 0 )

[resource]
shader = SubResource( 2 )
